{"version":3,"sources":["Components/Navbar.js","Components/Text.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onChange","toggleMode","btn","Text","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","rows","event","target","backgroundColor","onClick","newtext","toUpperCase","toLowerCase","split","length","prototype","PropTypes","string","isRequired","about","defaultProps","App","setMode","_useState3","_useState4","setbtn","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f0f496c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link }from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href={\"#\"}>{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href={\"#\"} >Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to={\"/about\"}>{props.about}</Link> */}\r\n              </li>\r\n\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={props.toggleMode} />{props.btn}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.prototype = { title: PropTypes.string.isRequired, about: PropTypes.string }\r\nNavbar.defaultProps = { title: \"Set tile\", about: \"wrtie something\" }","import React,{useState} from 'react' //useState is a hook helps in making variable\r\nexport default function Text(props) {\r\n    const handleUp =()=>{\r\n        const newtext=text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const handleChnge=(event)=>{\r\n         setText(event.target.value)\r\n    }\r\n    const handleDown=()=>{\r\n        const newtext=text.toLowerCase();\r\n        setText(newtext);\r\n    }\r\n    const cleanText=()=>{\r\n        setText(\"\")\r\n    }\r\n   const[text,setText]=useState('')\r\n    return (\r\n        <>\r\n        <div className='container'>\r\n            <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea value={text} className=\"form-control\" id=\"myBox\" rows=\"8\" onChange={handleChnge} style={{backgroundColor: props.mode==='dark'?'black':'white',color:props.mode==='dark'?'white':'black'}}></textarea>\r\n            </div>\r\n            <button className='btn btn-primary'onClick={handleUp}>Convert to upperCase</button>\r\n            <button className='btn btn-primary mx-4'onClick={handleDown}>Convert to LowerCase</button>\r\n            <button className='btn btn-primary mx-3'onClick={cleanText}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-5\">\r\n            <h1 style={{color: props.mode==='dark'?'white':'black'}}>Summary</h1>\r\n            <p style={{color: props.mode==='dark'?'white':'black'}}>{text.split(\" \").length}:Words   and  {text.length}:Characters </p>\r\n            <p style={{color: props.mode==='dark'?'white':'black'}}>{0.008*text.split(\" \").length}Minutes to read</p>\r\n            <h2 style={{color: props.mode==='dark'?'white':'black'}}>Preview</h2>\r\n            <p style={{color: props.mode==='dark'?'white':'black'}}>{text.length>0?text:\"Enter the text\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Text from './Components/Text';\n// import About from './Components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');//Enabled or not\n  const [btn, setbtn] = useState(\"Enable Dark Mode\");\n  // const [alert, setAlert] = useState(null);\n  // const showAlert = (message, type) => {\n  //   setAlert({\n  //     msg: message,\n  //     type: type\n  //   })\n  // }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      setbtn(\"Disable Dark Mode\")\n      // showAlert(\"Dark Mode is Enabled\", \"sucess\")\n      document.title = 'TextUtils - Dark Mode'\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      setbtn(\"Enable Dark Mode\")\n      // showAlert(\"Light Mode is Enabled\", \"sucess\")\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode} btn={btn} />\n      <div className=\"container my-5\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <Text heading=\"Enter the text to analyse\" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}